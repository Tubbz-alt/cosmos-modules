syntax = "proto3";

package cosmos_modules.incubator.group.v1_alpha;

option go_package = "github.com/cosmos/modules/incubator/group";

import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";
import "vendor/github.com/gogo/protobuf/gogoproto/gogo.proto";

message Msg {
    oneof sum {
        MsgCreateGroup create_group = 1; // returns uint64 GroupID
        MsgUpdateGroupMembers update_group_members = 2;
        MsgUpdateGroupAdmin update_group_admin = 3;
        MsgUpdateGroupComment update_group_comment = 4;
        MsgCreateGroupAccount create_group_account = 5; // returns sdk.AccAddress
        MsgUpdateGroupAccountAdmin update_group_account_admin = 6;
        MsgUpdateGroupAccountDecisionPolicy update_group_account_decision_policy = 7;
        MsgUpdateGroupAccountComment update_group_account_comment = 8;
        MsgPropose propose = 9;
        MsgVote vote = 10;
        MsgExec exec = 11;
    }
}

//
// Groups
//

message MsgCreateGroup {
    bytes admin = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"]; // sdk.AccAddress
    repeated Member members = 2;
    string comment = 3;
}

message MsgUpdateGroupMembers {
    bytes admin = 1; // sdk.AccAddress
    uint64 group = 2; // GroupID
    repeated Member member_updates = 3; // set power to 0 to remove
}

message MsgUpdateGroupAdmin {
    bytes admin = 1; // sdk.AccAddress
    uint64 group = 2; // GroupID
    bytes new_admin = 3; // sdk.AccAddress
}

message MsgUpdateGroupComment {
    bytes admin = 1; // sdk.AccAddress
    uint64 group = 2; // GroupID
    string comment = 3;
}

message Member {
    bytes address = 1; // sdk.AccAddress
    string power = 2; // sdk.Dec
    string comment = 3;
}

//
// Group Accounts
//

message MsgCreateGroupAccount {
    bytes admin = 1; // sdk.AccAddress
    uint64 group = 2; // GroupID
    google.protobuf.Any decision_policy = 3;
    string comment = 4;
}

message MsgUpdateGroupAccountAdmin {
    bytes admin = 1; // sdk.AccAddress
    bytes group_acount = 2; // sdk.AccAddress
    bytes new_admin = 3; // sdk.AccAddress
}

message MsgUpdateGroupAccountDecisionPolicy {
    bytes admin = 1; // sdk.AccAddress
    bytes group_acount = 2; // sdk.AccAddress
    google.protobuf.Any decision_policy = 3;
}

message MsgUpdateGroupAccountComment {
    bytes admin = 1; // sdk.AccAddress
    bytes group_acount = 2; // sdk.AccAddress
    string comment = 3;
}

message ThresholdDecisionPolicy {
    string threshold = 1; // sdk.Dec
    google.protobuf.Duration min_voting_window = 2;
    google.protobuf.Duration max_voting_window = 3;
}

//
// Proposals and Voting
//

message MsgPropose {
    bytes group_account = 1; // sdk.AccAddress
    // Proposers signatures will be counted as yes votes
    repeated bytes proposers = 2; // []sdk.AccAddress
    repeated google.protobuf.Any msgs= 3; // []sdk.Msg
    string comment = 4;
    // ExecNow will attempt to execute the proposal immediately based on
    // the proposers signing the transaction
    bool exec_now = 5;
}

enum Choice {
    NO = 0;
    YES = 1;
    ABSTAIN = 2;
    VETO = 3;
}

message MsgVote {
    uint64 proposal = 1; // ProposalID
    repeated bytes voters = 2; // []sdk.AccAddress
    Choice choice = 3;
    string comment = 4;
}

message MsgExec {
    uint64 proposal = 1; // ProposalID
    bytes signer = 2; // sdk.AccAddress
}

//
// State
//

message GroupMetadata {
    uint64 group = 1; // GroupID
    bytes admin = 2; // sdk.AccAddress
    string comment = 3;
    // version is used to track changes to a group's membership structure that
    // would break existing proposals. Whenever any members power is changed,
    // or any member is added or removed this version is incremented and will
    // cause proposals based on older versions of this group to fail
    uint64 version = 4;
}

message GroupMember {
    uint64 group = 1; // GroupID
    bytes member = 2; // sdk.AccAddress
    string weight = 3; // sdk.Dec
}

message GroupAccountMetadata {
    bytes group_account = 1; // sdk.AccAddress
    uint64 group = 2; // GroupID
    bytes admin = 3; // sdk.AccAddress
    string comment = 4;
    google.protobuf.Any decision_policy = 5;
}

message Proposal {
    bytes group_account = 1; // sdk.AccAddress
    repeated google.protobuf.Any msg = 2; // []sdk.Msg
    string comment = 3;
    repeated bytes proposers = 5; // sdk.AccAddress
    google.protobuf.Timestamp submitted_at = 6;
}

message Tally {
    string yes_count = 1;
    string no_count = 2;
    string abstain_count = 3;
    string veto_count = 4;
}

message Vote {
    uint64 proposal = 1; // ProposalID
    repeated bytes voters = 2; // sdk.AccAddress
    Choice choice = 3;
    string comment = 4;
    google.protobuf.Timestamp submitted_at = 5;
}
